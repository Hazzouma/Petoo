{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abirb\\\\OneDrive\\\\Bureau\\\\Petoo\\\\Petoo\\\\frontend\\\\src\\\\pages\\\\authentication\\\\forgetpwd.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../../assets/images/logo/login.png\";\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button, CardImg } from \"reactstrap\";\nimport { NewPassword, RetypePassword, Done, EnterOTP, Resend, ResetPassword, SignIn, Send, EmailAddress, PasswordMismatch, PasswordMatch } from \"../../constant\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { resetPassword, validOTP, videErrors } from \"../../redux/authentification/action\";\n\nconst Forgetpwd = props => {\n  const dispatch = useDispatch();\n  const [togglePassword, setTogglePassword] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [openDone, setOpenDone] = useState(true);\n  const [openDoneReset, setOpenDoneReset] = useState(false);\n  const [otp1, setOtp1] = useState(\"\");\n  const [otp2, setOtp2] = useState(\"\");\n  const [otp3, setOtp3] = useState(\"\");\n  const [pass2, setPass2] = useState(\"\");\n\n  const getOtp1 = e => {\n    setOtp1(e.target.value);\n  };\n\n  const getOtp2 = e => {\n    setOtp2(e.target.value);\n  };\n\n  const getOtp3 = e => {\n    setOtp3(e.target.value);\n  };\n\n  const getPass2 = e => {\n    setPass2(e.target.value);\n  };\n\n  const [email, setEmail] = useState(\"\");\n\n  const getEmail = e => setEmail(e.target.value);\n\n  const sendMail = () => {\n    dispatch(resetPassword(email));\n\n    if (validEmail) {\n      setOpenDone(false);\n      setOpenDoneReset(!openDoneReset);\n    }\n\n    console.log(openDoneReset + \" reset\");\n    console.log(openDone);\n  };\n\n  const validEmail = useSelector(state => state.userReducer.user); // console.log(validEmail);\n\n  const confirmOTP = () => {\n    if (password === pass2) //check matchi matchi password\n      dispatch(validOTP(validEmail, otp1 + otp2 + otp3, password, props.history));\n  };\n\n  const Onpaste = e => {\n    let clipboardData = e.clipboardData || window.clipboardData;\n    let pastedData = clipboardData.getData('Text');\n\n    if (pastedData) {\n      setOtp2(pastedData[2] + pastedData[3]);\n      setOtp3(pastedData[4] + pastedData[5]);\n    }\n  };\n\n  const handleChange = e => {\n    setPassword(e.target.value);\n  };\n\n  const HideShowPassword = tPassword => {\n    setTogglePassword(!tPassword);\n  };\n\n  const [sendResetEmail, setSendResetEmail] = useState(false);\n  const successSendMail = useSelector(state => state.userReducer.msg); // console.log(successSendMail)\n\n  const arrErrors = useSelector(state => state.userReducer.errors); // console.log(arrErrors);\n\n  useEffect(() => {\n    if (successSendMail) {\n      toast.success(successSendMail, {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 10000 //stay 10 secondes\n\n      }); // console.log(\"successSendMail\");\n\n      setSendResetEmail(true); // setTimeout(function () {\n      //   setSendResetEmail(false);\n      // }, 15000); // 3 minutes\n\n      dispatch(videErrors());\n    } else if ((arrErrors || []).length > 0) {\n      arrErrors.forEach(el => {\n        toast.error(el.msg, {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 5000\n        });\n      });\n      dispatch(videErrors());\n    } // eslint-disable-next-line\n\n  }, [successSendMail, arrErrors]);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"logo\",\n    href: \"#javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid for-light\",\n    src: logo,\n    alt: \"looginpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid for-dark\",\n    src: require(\"../../assets/images/logo/logo_dark.png\"),\n    alt: \"looginpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, ResetPassword), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 23\n    }\n  }, EmailAddress), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    placeholder: \"test@gmail.com\",\n    onChange: e => getEmail(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn-block m-t-10\" // type='submit'\n    ,\n    disabled: sendResetEmail,\n    onClick: () => sendMail(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, Send)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"reset-password-link\",\n    style: openDoneReset ? {\n      fontSize: \"14px\",\n      cursor: \"default\"\n    } : {\n      fontSize: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, \"If don't receive OTP?\", \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn-link text-danger\",\n    onClick: () => sendMail(),\n    style: openDoneReset ? {\n      fontSize: \"14px\",\n      cursor: \"pointer\"\n    } : {\n      fontSize: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }\n  }, Resend))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"col-form-label pt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, EnterOTP), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control text-center opt-text\",\n    type: \"text\",\n    placeholder: \"00\",\n    maxLength: \"2\",\n    value: otp1,\n    onChange: e => {\n      getOtp1(e);\n    },\n    onPaste: e => Onpaste(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control text-center opt-text\",\n    type: \"text\",\n    placeholder: \"00\",\n    value: otp2,\n    maxLength: \"2\",\n    onChange: e => {\n      getOtp2(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control text-center opt-text\",\n    type: \"text\",\n    placeholder: \"00\",\n    value: otp3,\n    maxLength: \"2\",\n    onChange: e => {\n      getOtp3(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }\n  }, \"Create Your Password\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, NewPassword), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: togglePassword ? \"text\" : \"password\",\n    name: \"login[password]\",\n    value: password,\n    onChange: e => handleChange(e),\n    required: \"\",\n    placeholder: \"*********\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"show-hide\",\n    onClick: () => HideShowPassword(togglePassword),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: togglePassword ? \"\" : \"show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"col-form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, password.length === 0 ? RetypePassword : password === pass2 ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, PasswordMatch) : /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }, PasswordMismatch)), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"password\",\n    name: \"login[password]\",\n    required: \"\",\n    placeholder: \"*********\",\n    onChange: e => getPass2(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn-block\",\n    disabled: openDone,\n    onClick: () => confirmOTP(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }, Done)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-4 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 19\n    }\n  }, \"Already have an password?\", /*#__PURE__*/React.createElement(Link, {\n    className: \"ml-2\",\n    to: \"/cuba/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, SignIn)))))))));\n};\n\nexport default Forgetpwd;","map":{"version":3,"sources":["C:/Users/abirb/OneDrive/Bureau/Petoo/Petoo/frontend/src/pages/authentication/forgetpwd.jsx"],"names":["React","useEffect","Link","logo","Container","Row","Col","Form","FormGroup","Label","Input","Button","CardImg","NewPassword","RetypePassword","Done","EnterOTP","Resend","ResetPassword","SignIn","Send","EmailAddress","PasswordMismatch","PasswordMatch","useState","useDispatch","useSelector","toast","resetPassword","validOTP","videErrors","Forgetpwd","props","dispatch","togglePassword","setTogglePassword","password","setPassword","openDone","setOpenDone","openDoneReset","setOpenDoneReset","otp1","setOtp1","otp2","setOtp2","otp3","setOtp3","pass2","setPass2","getOtp1","e","target","value","getOtp2","getOtp3","getPass2","email","setEmail","getEmail","sendMail","validEmail","console","log","state","userReducer","user","confirmOTP","history","Onpaste","clipboardData","window","pastedData","getData","handleChange","HideShowPassword","tPassword","sendResetEmail","setSendResetEmail","successSendMail","msg","arrErrors","errors","success","position","POSITION","TOP_RIGHT","autoClose","length","forEach","el","error","require","fontSize","cursor","color"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/images/logo/login.png\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  CardImg,\r\n} from \"reactstrap\";\r\nimport {\r\n  NewPassword,\r\n  RetypePassword,\r\n  Done,\r\n  EnterOTP,\r\n  Resend,\r\n  ResetPassword,\r\n  SignIn,\r\n  Send,\r\n  EmailAddress,\r\n  PasswordMismatch,\r\n  PasswordMatch,\r\n} from \"../../constant\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  resetPassword,\r\n  validOTP,\r\n  videErrors,\r\n} from \"../../redux/authentification/action\";\r\n\r\nconst Forgetpwd = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [togglePassword, setTogglePassword] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [openDone, setOpenDone] = useState(true);\r\n  const [openDoneReset, setOpenDoneReset] = useState(false);\r\n\r\n  const [otp1, setOtp1] = useState(\"\");\r\n  const [otp2, setOtp2] = useState(\"\");\r\n  const [otp3, setOtp3] = useState(\"\");\r\n\r\n  const [pass2, setPass2] = useState(\"\");\r\n\r\n  const getOtp1 = (e) => {\r\n    setOtp1(e.target.value);\r\n  };\r\n  const getOtp2 = (e) => {\r\n    setOtp2(e.target.value);\r\n  };\r\n  const getOtp3 = (e) => {\r\n    setOtp3(e.target.value);\r\n  };\r\n  const getPass2 = (e) => {\r\n    setPass2(e.target.value);\r\n  };\r\n  const [email, setEmail] = useState(\"\");\r\n  const getEmail = (e) => setEmail(e.target.value);\r\n\r\n  const sendMail = () => {\r\n    dispatch(resetPassword(email));\r\n    if (validEmail) {\r\n      setOpenDone(false);\r\n      setOpenDoneReset(!openDoneReset);\r\n    }\r\n    console.log(openDoneReset + \" reset\");\r\n    console.log(openDone);\r\n  };\r\n  const validEmail = useSelector((state) => state.userReducer.user);\r\n  // console.log(validEmail);\r\n  const confirmOTP = () => {\r\n    if (password === pass2)\r\n      //check matchi matchi password\r\n      dispatch(\r\n        validOTP(validEmail, otp1 + otp2 + otp3, password, props.history)\r\n      );\r\n  };\r\n  const Onpaste = (e) => {\r\n   let clipboardData = e.clipboardData || window.clipboardData;\r\n   let pastedData = clipboardData.getData('Text');\r\n      if (pastedData) {\r\n        setOtp2(pastedData[2]+pastedData[3])\r\n        setOtp3(pastedData[4]+pastedData[5])\r\n      }\r\n  }\r\n  const handleChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const HideShowPassword = (tPassword) => {\r\n    setTogglePassword(!tPassword);\r\n  };\r\n  const [sendResetEmail, setSendResetEmail] = useState(false);\r\n\r\n  const successSendMail = useSelector((state) => state.userReducer.msg);\r\n  // console.log(successSendMail)\r\n  const arrErrors = useSelector((state) => state.userReducer.errors);\r\n  // console.log(arrErrors);\r\n  useEffect(() => {\r\n    if (successSendMail) {\r\n      toast.success(successSendMail, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        autoClose: 10000, //stay 10 secondes\r\n      });\r\n      // console.log(\"successSendMail\");\r\n      setSendResetEmail(true);\r\n      // setTimeout(function () {\r\n      //   setSendResetEmail(false);\r\n      // }, 15000); // 3 minutes\r\n      dispatch(videErrors());\r\n    } else if ((arrErrors || []).length > 0) {\r\n      arrErrors.forEach((el) => {\r\n        toast.error(el.msg, {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          autoClose: 5000,\r\n        });\r\n      });\r\n      dispatch(videErrors());\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [successSendMail, arrErrors]);\r\n  return (\r\n    <Container fluid={true}>\r\n      <Row>\r\n        <Col xs='12'>\r\n          <div className='login-card'>\r\n            <div>\r\n              <div>\r\n                <a className='logo' href='#javascript'>\r\n                  <img\r\n                    className='img-fluid for-light'\r\n                    src={logo}\r\n                    alt='looginpage'\r\n                  />\r\n                  <img\r\n                    className='img-fluid for-dark'\r\n                    src={require(\"../../assets/images/logo/logo_dark.png\")}\r\n                    alt='looginpage'\r\n                  />\r\n                </a>\r\n              </div>\r\n              <div className='login-main'>\r\n                <Form className='theme-form'>\r\n                  <h4>{ResetPassword}</h4>\r\n                  <FormGroup>\r\n                    <FormGroup>\r\n                      <Label className='col-form-label'>{EmailAddress}</Label>\r\n                      <Input\r\n                        className='form-control'\r\n                        placeholder='test@gmail.com'\r\n                        onChange={(e) => getEmail(e)}\r\n                      />\r\n                    </FormGroup>\r\n                    <Row>\r\n                      <Col xs='12'>\r\n                        <Button\r\n                          color='primary'\r\n                          className='btn-block m-t-10'\r\n                          // type='submit'\r\n                          disabled={sendResetEmail}\r\n                          onClick={() => sendMail()}\r\n                        >\r\n                          {Send}\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <div className='text-center mt-4 mb-4'>\r\n                    <span\r\n                      className='reset-password-link'\r\n                      style={\r\n                        openDoneReset\r\n                          ? { fontSize: \"14px\", cursor: \"default\" }\r\n                          : { fontSize: \"0px\" }\r\n                      }\r\n                    >\r\n                      {\"If don't receive OTP?\"}  \r\n                      <span\r\n                        className='btn-link text-danger'\r\n                        onClick={() => sendMail()}\r\n                        style={\r\n                          openDoneReset\r\n                            ? { fontSize: \"14px\", cursor: \"pointer\" }\r\n                            : { fontSize: \"0px\" }\r\n                        }\r\n                      >\r\n                        {Resend}\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                  <FormGroup>\r\n                    <Label className='col-form-label pt-0'>{EnterOTP}</Label>\r\n                    <Row>\r\n                      <Col>\r\n                        <Input\r\n                          className='form-control text-center opt-text'\r\n                          type='text'\r\n                          placeholder='00'\r\n                          maxLength='2'\r\n                          value={otp1}\r\n                          onChange={(e) => {\r\n                            getOtp1(e);\r\n                          }}\r\n                          onPaste={(e) => Onpaste(e)}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Input\r\n                          className='form-control text-center opt-text'\r\n                          type='text'\r\n                          placeholder='00'\r\n                          value={otp2}\r\n                          maxLength='2'\r\n                          onChange={(e) => {\r\n                            getOtp2(e);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Input\r\n                          className='form-control text-center opt-text'\r\n                          type='text'\r\n                          placeholder='00'\r\n                          value={otp3}\r\n                          maxLength='2'\r\n                          onChange={(e) => {\r\n                            getOtp3(e);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                  <h6 className='mt-4'>{\"Create Your Password\"}</h6>\r\n                  <FormGroup>\r\n                    <Label className='col-form-label'>{NewPassword}</Label>\r\n                    <Input\r\n                      className='form-control'\r\n                      type={togglePassword ? \"text\" : \"password\"}\r\n                      name='login[password]'\r\n                      value={password}\r\n                      onChange={(e) => handleChange(e)}\r\n                      required=''\r\n                      placeholder='*********'\r\n                    />\r\n                    <div\r\n                      className='show-hide'\r\n                      onClick={() => HideShowPassword(togglePassword)}\r\n                    >\r\n                      <span className={togglePassword ? \"\" : \"show\"}></span>\r\n                    </div>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label className='col-form-label'>\r\n                      {password.length === 0 ? (\r\n                        RetypePassword\r\n                      ) : password === pass2 ? (\r\n                        <span style={{ color: \"green\" }}>{PasswordMatch}</span>\r\n                      ) : (\r\n                        <span style={{ color: \"red\" }}>{PasswordMismatch}</span>\r\n                      )}\r\n                    </Label>\r\n                    <Input\r\n                      className='form-control'\r\n                      type='password'\r\n                      name='login[password]'\r\n                      required=''\r\n                      placeholder='*********'\r\n                      onChange={(e) => getPass2(e)}\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup className='mb-0'>\r\n                    <br />\r\n                    <Button\r\n                      color='primary'\r\n                      className='btn-block'\r\n                      disabled={openDone}\r\n                      onClick={() => confirmOTP()}\r\n                    >\r\n                      {Done}\r\n                    </Button>\r\n                  </FormGroup>\r\n                  <p className='mt-4 mb-0'>\r\n                    {\"Already have an password?\"}\r\n                    <Link className='ml-2' to='/cuba/login'>\r\n                      {SignIn}\r\n                    </Link>\r\n                  </p>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Forgetpwd;\r\n"]},"metadata":{},"sourceType":"module"}
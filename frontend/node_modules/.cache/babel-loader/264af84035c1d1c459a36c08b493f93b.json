{"ast":null,"code":"const {\n  REGISTER_USER,\n  LOGIN_USER,\n  FAIL_USER,\n  LOAD_USER,\n  CURRENT_USER,\n  LOGOUT_USER,\n  RESET_PASSWORD,\n  VALIDATE_OTP,\n  VIDE_ERRORS\n} = require(\"../actionTypes\"); // initialstate\n\n\nconst initialState = {\n  user: {},\n  errors: [],\n  isAuth: false,\n  load: false,\n  msg: \"\"\n}; // pure function=> (state, {type,payload})=>\n\nconst userReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case LOAD_USER:\n      return { ...state,\n        load: true\n      };\n    //   payload:{token , msg , user }\n\n    case REGISTER_USER:\n      // localStorage.setItem(\"token\", payload.token);\n      return { ...state,\n        load: false,\n        isAuth: false,\n        msg: payload\n      };\n    //   payload: {token , msg , user}\n\n    case LOGIN_USER:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state,\n        user: payload.foundOwner,\n        load: false,\n        isAuth: true\n      };\n\n    case FAIL_USER:\n      return { ...state,\n        errors: payload,\n        msg: \"\",\n        load: false\n      };\n\n    case LOGOUT_USER:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        user: {},\n        isAuth: false\n      };\n\n    case RESET_PASSWORD:\n      {\n        if (typeof payload.msg === \"string\") return { ...state,\n          msg: payload.msg,\n          errors: [],\n          isAuth: false,\n          load: false,\n          user: payload.email\n        };else return { ...state,\n          errors: payload.error,\n          msg: \"\",\n          isAuth: false,\n          load: false\n        };\n      }\n\n    case VALIDATE_OTP:\n      if (typeof payload.msg === \"string\") return { ...state,\n        user: payload.user,\n        isAuth: false,\n        load: false,\n        errors: [],\n        msg: payload.msg\n      }; //email , password, OTP\n      else {\n          return { ...state,\n            errors: payload.error\n          };\n        }\n\n    case VIDE_ERRORS:\n      return { ...state,\n        errors: [],\n        msg: \"\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/abirb/Downloads/Petoo/petoo-master/client/src/redux/authentification/reducer.jsx"],"names":["REGISTER_USER","LOGIN_USER","FAIL_USER","LOAD_USER","CURRENT_USER","LOGOUT_USER","RESET_PASSWORD","VALIDATE_OTP","VIDE_ERRORS","require","initialState","user","errors","isAuth","load","msg","userReducer","state","type","payload","localStorage","setItem","token","foundOwner","removeItem","email","error"],"mappings":"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","sourcesContent":["const {\n  REGISTER_USER,\n  LOGIN_USER,\n  FAIL_USER,\n  LOAD_USER,\n  CURRENT_USER,\n  LOGOUT_USER,\n  RESET_PASSWORD,\n  VALIDATE_OTP,\n  VIDE_ERRORS,\n} = require(\"../actionTypes\");\n\n// initialstate\nconst initialState = {\n  user: {},\n  errors: [],\n  isAuth: false,\n  load: false,\n  msg: \"\",\n};\n\n// pure function=> (state, {type,payload})=>\nconst userReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case LOAD_USER:\n      return { ...state, load: true };\n    //   payload:{token , msg , user }\n    case REGISTER_USER:\n      // localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        load: false,\n        isAuth: false,\n        msg: payload,\n      };\n    //   payload: {token , msg , user}\n    case LOGIN_USER:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state, user: payload.foundOwner, load: false, isAuth: true };\n    case FAIL_USER:\n      return { ...state, errors: payload, msg: \"\", load: false };\n\n    case LOGOUT_USER:\n      localStorage.removeItem(\"token\");\n      return { ...state, user: {}, isAuth: false };\n    case RESET_PASSWORD: {\n      if (typeof payload.msg === \"string\")\n        return {\n          ...state,\n          msg: payload.msg,\n          errors: [],\n          isAuth: false,\n          load: false,\n          user: payload.email,\n        };\n      else\n        return {\n          ...state,\n          errors: payload.error,\n          msg: \"\",\n          isAuth: false,\n          load: false,\n        };\n    }\n    case VALIDATE_OTP:\n      if (typeof payload.msg === \"string\")\n        return {\n          ...state,\n          user: payload.user,\n          isAuth: false,\n          load: false,\n          errors: [],\n          msg: payload.msg,\n        };\n      //email , password, OTP\n      else {\n        return { ...state, errors: payload.error };\n      }\n    case VIDE_ERRORS:\n      return { ...state, errors: [], msg: \"\" };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}
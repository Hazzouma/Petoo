{"ast":null,"code":"const {\n  REGISTER_USER,\n  LOGIN_USER,\n  FAIL_USER,\n  LOAD_USER,\n  LOGOUT_USER,\n  RESET_PASSWORD,\n  VALIDATE_OTP,\n  VIDE_ERRORS\n} = require(\"../actionTypes\"); // initialstate\n\n\nconst initialState = {\n  user: {},\n  errors: [],\n  isAuth: false,\n  load: false,\n  msg: \"\"\n}; // pure function=> (state, {type,payload})=>\n\nconst userReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case LOAD_USER:\n      return { ...state,\n        load: true\n      };\n    //   payload:{token , msg , user }\n\n    case REGISTER_USER:\n      // localStorage.setItem(\"token\", payload.token);\n      return { ...state,\n        load: false,\n        isAuth: false,\n        msg: payload\n      };\n    //   payload: {token , msg , user}\n\n    case LOGIN_USER:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state,\n        user: payload.foundOwner,\n        load: false,\n        isAuth: true\n      };\n\n    case FAIL_USER:\n      return { ...state,\n        errors: payload,\n        msg: \"\",\n        load: false\n      };\n\n    case LOGOUT_USER:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        user: {},\n        isAuth: false\n      };\n\n    case RESET_PASSWORD:\n      {\n        if (typeof payload.msg === \"string\") return { ...state,\n          msg: payload.msg,\n          errors: [],\n          isAuth: false,\n          load: false,\n          user: payload.email\n        };else return { ...state,\n          errors: payload.errors,\n          msg: \"\",\n          isAuth: false,\n          load: false\n        };\n      }\n\n    case VALIDATE_OTP:\n      if (typeof payload.msg === \"string\") // { msg }\n        return { ...state,\n          // user: payload.user,\n          isAuth: false,\n          load: false,\n          errors: [],\n          msg: payload.msg\n        }; //email , password, OTP\n      else {\n          return { ...state,\n            errors: payload\n          };\n        }\n\n    case VIDE_ERRORS:\n      return { ...state,\n        errors: [],\n        msg: \"\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["C:/Users/abirb/OneDrive/Bureau/Petoo/Petoo/frontend/src/redux/authentification/reducer.jsx"],"names":["REGISTER_USER","LOGIN_USER","FAIL_USER","LOAD_USER","LOGOUT_USER","RESET_PASSWORD","VALIDATE_OTP","VIDE_ERRORS","require","initialState","user","errors","isAuth","load","msg","userReducer","state","type","payload","localStorage","setItem","token","foundOwner","removeItem","email"],"mappings":"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","sourcesContent":["const {\r\n  REGISTER_USER,\r\n  LOGIN_USER,\r\n  FAIL_USER,\r\n  LOAD_USER,\r\n  LOGOUT_USER,\r\n  RESET_PASSWORD,\r\n  VALIDATE_OTP,\r\n  VIDE_ERRORS,\r\n} = require(\"../actionTypes\");\r\n\r\n// initialstate\r\nconst initialState = {\r\n  user: {},\r\n  errors: [],\r\n  isAuth: false,\r\n  load: false,\r\n  msg: \"\",\r\n};\r\n\r\n// pure function=> (state, {type,payload})=>\r\nconst userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case LOAD_USER:\r\n      return { ...state, load: true };\r\n    //   payload:{token , msg , user }\r\n    case REGISTER_USER:\r\n      // localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        load: false,\r\n        isAuth: false,\r\n        msg: payload,\r\n      };\r\n    //   payload: {token , msg , user}\r\n    case LOGIN_USER:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return { ...state, user: payload.foundOwner, load: false, isAuth: true };\r\n    case FAIL_USER:\r\n      return { ...state, errors: payload, msg: \"\", load: false };\r\n\r\n    case LOGOUT_USER:\r\n      localStorage.removeItem(\"token\");\r\n      return { ...state, user: {}, isAuth: false };\r\n    case RESET_PASSWORD: {\r\n      if (typeof payload.msg === \"string\")\r\n        return {\r\n          ...state,\r\n          msg: payload.msg,\r\n          errors: [],\r\n          isAuth: false,\r\n          load: false,\r\n          user: payload.email,\r\n        };\r\n      else\r\n        return {\r\n          ...state,\r\n          errors: payload.errors,\r\n          msg: \"\",\r\n          isAuth: false,\r\n          load: false,\r\n        };\r\n    }\r\n    case VALIDATE_OTP:\r\n      if (typeof payload.msg === \"string\")\r\n        // { msg }\r\n        return {\r\n          ...state,\r\n          // user: payload.user,\r\n          isAuth: false,\r\n          load: false,\r\n          errors: [],\r\n          msg: payload.msg,\r\n        };\r\n      //email , password, OTP\r\n      else {\r\n        return { ...state, errors: payload };\r\n      }\r\n    case VIDE_ERRORS:\r\n      return { ...state, errors: [], msg: \"\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n"]},"metadata":{},"sourceType":"module"}
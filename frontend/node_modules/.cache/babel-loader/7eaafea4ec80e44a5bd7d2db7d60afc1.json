{"ast":null,"code":"import { LOGOUT_USER, FAIL_USER, LOAD_USER, LOGIN_USER, REGISTER_USER, RESET_PASSWORD, VALIDATE_OTP, VIDE_ERRORS } from \"../actionTypes\";\nimport axios from \"axios\";\nexport const login = user => async dispatch => {\n  dispatch({\n    type: LOAD_USER\n  });\n\n  try {\n    let result = await axios.post(`${process.env.PUBLIC_URL}/api/login`, user); // console.log(result.data);\n\n    console.log(`${process.env.PUBLIC_URL}`);\n    dispatch({\n      type: LOGIN_USER,\n      payload: result.data\n    }); // payload : {msg,token,user}\n\n    window.location.href = `${process.env.PUBLIC_URL}/dashboard/default`; //Nice Samuuu\n  } catch (error) {\n    console.log(error.response.data.errors);\n    dispatch({\n      type: FAIL_USER,\n      payload: error.response.data.errors\n    });\n  }\n};\nexport const register = (user, history) => async dispatch => {\n  dispatch({\n    type: LOAD_USER\n  });\n\n  try {\n    let result = await axios.post(`${process.env.PUBLIC_URL}/api/register`, user);\n    dispatch({\n      type: REGISTER_USER,\n      payload: result.data.msg\n    }); // payload : {msg}\n\n    history.push(`${process.env.PUBLIC_URL}/login`);\n  } catch (error) {\n    console.log(error.response.data);\n    dispatch({\n      type: FAIL_USER,\n      payload: error.response.data.errors\n    });\n  }\n}; // logout\n\nexport const logout = history => {\n  history.push(`${process.env.PUBLIC_URL}/login`);\n  return {\n    type: LOGOUT_USER\n  };\n};\nexport const videErrors = () => {\n  return {\n    type: VIDE_ERRORS\n  };\n}; //reset password\n\nexport const resetPassword = email => async dispatch => {\n  dispatch({\n    type: LOAD_USER\n  });\n\n  try {\n    let result = await axios.post(`${process.env.PUBLIC_URL}/api/forgetPwd/otp`, {\n      email\n    });\n    console.log(result.data);\n    dispatch({\n      type: RESET_PASSWORD,\n      payload: result.data\n    }); //{msg, email}\n  } catch (error) {\n    dispatch({\n      type: FAIL_USER,\n      payload: error.response.data.error\n    });\n  }\n};\nexport const validOTP = (email, otp, password, history) => async dispatch => {\n  dispatch({\n    type: LOAD_USER\n  });\n\n  try {\n    let result = await axios.post(`${process.env.PUBLIC_URL}/api/forgetPwd`, {\n      email,\n      otp,\n      password,\n      history\n    });\n    console.log(result.data);\n    dispatch({\n      type: VALIDATE_OTP,\n      payload: result.data\n    }); //{msg}\n\n    history.push(`${process.env.PUBLIC_URL}/login`);\n  } catch (error) {\n    dispatch({\n      type: FAIL_USER,\n      payload: error.response.data.errors\n    });\n    console.log(\"Error redux reset pass: \", error.response.data.errors);\n  }\n};","map":{"version":3,"sources":["C:/Users/abirb/OneDrive/Bureau/Petoo/Petoo/frontend/src/redux/authentification/action.jsx"],"names":["LOGOUT_USER","FAIL_USER","LOAD_USER","LOGIN_USER","REGISTER_USER","RESET_PASSWORD","VALIDATE_OTP","VIDE_ERRORS","axios","login","user","dispatch","type","result","post","process","env","PUBLIC_URL","console","log","payload","data","window","location","href","error","response","errors","register","history","msg","push","logout","videErrors","resetPassword","email","validOTP","otp","password"],"mappings":"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","sourcesContent":["import {\r\n  LOGOUT_USER,\r\n  FAIL_USER,\r\n  LOAD_USER,\r\n  LOGIN_USER,\r\n  REGISTER_USER,\r\n  RESET_PASSWORD,\r\n  VALIDATE_OTP,\r\n  VIDE_ERRORS,\r\n} from \"../actionTypes\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const login = (user) => async (dispatch) => {\r\n  dispatch({ type: LOAD_USER });\r\n  try {\r\n    let result = await axios.post(`${process.env.PUBLIC_URL}/api/login`, user);\r\n    // console.log(result.data);\r\n    console.log(`${process.env.PUBLIC_URL}`);\r\n    dispatch({ type: LOGIN_USER, payload: result.data }); // payload : {msg,token,user}\r\n    window.location.href = `${process.env.PUBLIC_URL}/dashboard/default`; //Nice Samuuu\r\n  } catch (error) {\r\n    console.log(error.response.data.errors);\r\n    dispatch({ type: FAIL_USER, payload: error.response.data.errors });\r\n  }\r\n};\r\n\r\nexport const register = (user, history) => async (dispatch) => {\r\n  dispatch({ type: LOAD_USER });\r\n  try {\r\n    let result = await axios.post(\r\n      `${process.env.PUBLIC_URL}/api/register`,\r\n      user\r\n    );\r\n    dispatch({ type: REGISTER_USER, payload: result.data.msg }); // payload : {msg}\r\n    history.push(`${process.env.PUBLIC_URL}/login`);\r\n  } catch (error) {\r\n    console.log(error.response.data);\r\n    dispatch({ type: FAIL_USER, payload: error.response.data.errors });\r\n  }\r\n};\r\n\r\n// logout\r\nexport const logout = (history) => {\r\n  history.push(`${process.env.PUBLIC_URL}/login`);\r\n  return {\r\n    type: LOGOUT_USER,\r\n  };\r\n};\r\n\r\nexport const videErrors = () => {\r\n  return {\r\n    type: VIDE_ERRORS,\r\n  };\r\n};\r\n\r\n//reset password\r\nexport const resetPassword = (email) => async (dispatch) => {\r\n  dispatch({ type: LOAD_USER });\r\n  try {\r\n    let result = await axios.post(\r\n      `${process.env.PUBLIC_URL}/api/forgetPwd/otp`,\r\n      { email }\r\n    );\r\n    console.log(result.data);\r\n    dispatch({ type: RESET_PASSWORD, payload: result.data }); //{msg, email}\r\n  } catch (error) {\r\n    dispatch({ type: FAIL_USER, payload: error.response.data.error });\r\n  }\r\n};\r\nexport const validOTP = (email, otp, password, history) => async (dispatch) => {\r\n  dispatch({ type: LOAD_USER });\r\n  try {\r\n    let result = await axios.post(`${process.env.PUBLIC_URL}/api/forgetPwd`, {\r\n      email,\r\n      otp,\r\n      password,\r\n      history,\r\n    });\r\n    console.log(result.data);\r\n    dispatch({ type: VALIDATE_OTP, payload: result.data }); //{msg}\r\n    history.push(`${process.env.PUBLIC_URL}/login`);\r\n  } catch (error) {\r\n    dispatch({ type: FAIL_USER, payload: error.response.data.errors });\r\n    console.log(\"Error redux reset pass: \", error.response.data.errors);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}